buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
}

version = '1.5.6'
group = 'com.pyding.vop'
archivesBaseName = 'VestigesOfThePresent 1.20.1'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: '1.20.1'
    runs {
        client {
            workingDirectory project.file('run')
            args '--username=Dev'
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'vp'
            mods {
                vp {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'vp'

            mods {
                vp {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'vp'

            mods {
                vp {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'vp', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                vp {
                    source sourceSets.main
                }
            }
        }

    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

mixin {
    println("Damn Deniel...")

    add sourceSets.main, "vp.refmap.json"
    config "vp.mixins.json"
}

repositories {
    google()
    maven {
        url = "https://maven.theillusivec4.top/"
    }
    maven {
        name = "BlameJared Maven"
        url = "https://maven.blamejared.com/"
    }
    flatDir {
       dir 'libs'
    }
}



dependencies {
    //1.20.1
    minecraft 'net.minecraftforge:forge:1.20.1-47.1.44'
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:5.14.1+1.20.1")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:5.14.1+1.20.1:api")

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    implementation fg.deobf("mezz.jei:jei-1.20.1-forge-api:15.2.0.27")
    runtimeOnly(fg.deobf("mezz.jei:jei-1.20.1-forge:15.2.0.27"))

    compileOnly name: 'NoGrief 1.20.1-1.0.0'

    //implementation name: 'fantasy_ending'

    //1.19.2
    /*minecraft 'net.minecraftforge:forge:1.19.2-43.3.2'
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.19.2-5.1.1.0")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.19.2-5.1.1.0:api")
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'*/

}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "examplemod",
                "Specification-Vendor"    : "examplemodsareus",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "examplemodsareus",
                "MixinConfigs": "vp.mixins.json",
                "FMLCorePluginContainsFMLMod": "true",
                "ForceLoadAsMod": "true",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
